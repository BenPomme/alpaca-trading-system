name: Update Trading Dashboard Data

on:
  schedule:
    - cron: '*/10 13-20 * * 1-5'
    - cron: '*/30 * * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  update-dashboard:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create directories
      run: |
        mkdir -p data
        mkdir -p docs/api
    
    - name: Generate dashboard data
      run: |
        echo "üîÑ Generating dashboard data..."
        python - <<EOF
        import os
        import sys
        sys.path.append('.')
        
        # Set the API keys as environment variables
        os.environ['ALPACA_PAPER_API_KEY'] = '${{ secrets.ALPACA_PAPER_API_KEY }}'.strip()
        os.environ['ALPACA_PAPER_SECRET_KEY'] = '${{ secrets.ALPACA_PAPER_SECRET_KEY }}'.strip()
        
        # Import cloud database and dashboard API
        from cloud_database import CloudDatabase
        from dashboard_api import DashboardAPI
        
        # Sync data from cloud first
        cloud_db = CloudDatabase()
        cloud_db.sync_from_github()
        
        try:
            api = DashboardAPI()
            data = api.generate_dashboard_data()
            api.save_to_file(data)
            print("‚úÖ Dashboard data generated successfully")
        except Exception as e:
            print(f"‚ùå Error: {e}")
            # Generate fallback data
            import json
            from datetime import datetime
            fallback_data = {
                'portfolio': {'value': 99131.16, 'cash': 24532.57, 'dayTradingPower': 222926.24},
                'positions': [],
                'performance': {'winRate': 31.25, 'totalTrades': 48, 'dataSource': 'github_fallback'},
                'generated_at': datetime.now().isoformat(),
                'data_source': 'github_fallback'
            }
            os.makedirs('docs/api', exist_ok=True)
            with open('docs/api/dashboard-data.json', 'w') as f:
                json.dump(fallback_data, f, indent=2)
            print("‚ö†Ô∏è Used fallback data due to API issues")
        EOF
        echo "‚úÖ Dashboard data step completed"
    
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet docs/api/dashboard-data.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        git config --local user.email "dashboard@alpaca-trading.com"
        git config --local user.name "Dashboard Auto-Update"
        git add docs/api/dashboard-data.json
        git commit -m "üìä Auto-update dashboard data $(date -u '+%Y-%m-%d %H:%M UTC')"
        git push
    
    - name: Log update status
      run: |
        if [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
          echo "‚úÖ Dashboard data updated and pushed to GitHub Pages"
        else
          echo "‚ÑπÔ∏è No changes to dashboard data"
        fi